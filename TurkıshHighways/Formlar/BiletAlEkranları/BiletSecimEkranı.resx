<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wMDgPoCX1/8Bf4dmkmoMi2YAAAAASUVORK5CYII=
</value>
  </data>
</root>